<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
                      http://www.springframework.org/schema/beans/spring-beans.xsd 
                      http://www.springframework.org/schema/context 
                      http://www.springframework.org/schema/context/spring-context.xsd 
                      http://www.springframework.org/schema/aop   
                      http://www.springframework.org/schema/aop/spring-aop.xsd 
                      http://www.springframework.org/schema/tx 
                  http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- JDBC连接 properties 文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 配置 dbcp 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="1"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="10"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="2"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="1"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="5000"></property>
	</bean>
	<!-- 配置 MyBatis的 SessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
		<property name="typeAliasesPackage" value="com.entity" />
	</bean>
	<!-- 扫描 DAO接口所在包名，Spring 会自动代理生成其下的接口实现类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<!-- 事务管理器，用于事务通知 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" timeout="60" />
			<tx:method name="update*" propagation="REQUIRED" timeout="60" />
			<tx:method name="delete*" propagation="REQUIRED" timeout="60" />
			<tx:method name="get*" read-only="true" timeout="60" />
			<tx:method name="fetch*" read-only="true" timeout="60" />
		</tx:attributes>
	</tx:advice>
	<!-- AOP 事务通知 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.service..*.*(..))" id="bizMethod" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bizMethod" />
	</aop:config>
</beans> 